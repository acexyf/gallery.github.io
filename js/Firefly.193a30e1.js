"use strict";(self["webpackChunkcreation_gallery"]=self["webpackChunkcreation_gallery"]||[]).push([[346],{93866:function(e,i,n){n.r(i),n.d(i,{default:function(){return w}});var t=n(58258),o=(n(75898),n(66653),n(91242),n(26057),n(55624),n(39820),n(69694)),r=n(75030),s=n(64634);const a=100,c=3;class l{constructor(){this.scene=(0,o.H7)(),this.scene.background=new r.Q1f(855584),this.camera=(0,o.Gc)(new r.Pq0(c+1,0,0),55,.01,2e4),this.renderer=(0,o.Ki)(),this.controls=(0,o.ZN)(this.camera,this.renderer,!1),(0,o.AU)(this.scene,100),this.initGeometry(),this.clock=(0,o.$i)(),this._resizeFn=this.resizeFn.bind(this),window.addEventListener("resize",this._resizeFn),this.render()}initGeometry(){const e=new r.LoY,i=new Float32Array(3*a);for(let o=0;o<a;o++)i[3*o+0]=(0,s.Ak)(-c,c),i[3*o+1]=(0,s.Ak)(-c,c),i[3*o+2]=(0,s.Ak)(-c,c);e.setAttribute("position",new r.THS(i,3));const n=new r.BKk({uniforms:{uPixelRatio:{value:Math.min(window.devicePixelRatio,2)},uSize:{value:100},uTime:{value:0}},blending:r.EZo,vertexShader:"\n      uniform float uPixelRatio;\n      uniform float uSize; // 粒子大小\n      uniform float uTime;\n\n      void main()\n      {\n          vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n          vec4 viewPosition = viewMatrix * modelPosition;\n          vec4 projectionPosition = projectionMatrix * viewPosition;\n\n          gl_Position = projectionPosition;\n          gl_PointSize = uSize * uPixelRatio; //每一个点的渲染尺寸\n          gl_PointSize *= (1.0 / - viewPosition.z); //近大远小\n          \n          // 萤火虫的浮动\n          // vec4 modelPosition = modelMatrix * vec4(position, 1.0); \n          modelPosition.y += sin(uTime);\n      }",fragmentShader:"\n      void main()\n      {\n          float distanceToCenter = distance(gl_PointCoord, vec2(0.5)); // 计算每一个像素点到中心的距离\n          float strength = 0.05 / distanceToCenter - 0.1; // 中心大，周围小\n\n          gl_FragColor = vec4(1.0, 1.0, 1.0, strength); // 将 strength 作为 alpha\n      }\n      "}),t=new r.ONl(e,n);this.fireflies=t,this.scene.add(t)}resizeFn(){this.renderer.setSize(window.innerWidth,window.innerHeight),this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix()}render(){this.fireflies&&(this.fireflies.material.uniforms["uTime"].value=this.clock.getElapsedTime()),this.renderer.render(this.scene,this.camera),this.timer=requestAnimationFrame(this.render.bind(this))}}const d={id:"webgl-output",class:"webgl-output"},h={name:"Firefly"};var u=Object.assign(h,{setup(e){return(0,t.sV)((()=>{new l})),(e,i)=>((0,t.uX)(),(0,t.CE)("div",d))}});const m=u;var w=m}}]);